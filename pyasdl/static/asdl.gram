@subheader """\
from typing import List, Union
from pyasdl.grammar import (
    Constructor,
    Field,
    FieldQualifier,
    Module,
    Product,
    Sum,
    Type,
)

TypeList = List[Type]
FieldList = List[Field]
ConstructorList = List[Constructor]
ProductOrSum = Union[Product, Sum]
"""

start[Module]: 'module' name=NAME NEWLINE? "{" body=definitions "}" {
    Module(name.string, body)
}

definitions[TypeList]: 
    | definition definitions { [definition] + definitions }
    | definition { [definition] }
definition[Type]: name=NAME "=" define { Type(name.string, define) }
define[ProductOrSum]:
    | sum_body attrs=attributes? { Sum(sum_body, attrs or []) }
    | fields attrs=attributes? { Product(fields, attrs or []) }

sum_body[ConstructorList]:
    | constructor !"|" { [constructor] }
    | constructors="|".constructor+ { constructors }
constructor[Constructor]: name=NAME fields=fields? { Constructor(name.string, fields or []) }

fields[FieldList]: "(" body=fields_body? ")" { body }
fields_body[FieldList]:
    | field !"," { [field] }
    | fields=",".field+ { fields }

field[Field]: type=NAME qualifier=field_qualifier? name=NAME {
    Field(type.string, name.string, qualifier)
}
field_qualifier[FieldQualifier]: 
    | "?" { FieldQualifier.OPTIONAL }
    | "*" { FieldQualifier.SEQUENCE } 

attributes[FieldList]: "attributes" fields { fields }
